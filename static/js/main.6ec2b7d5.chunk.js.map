{"version":3,"sources":["pages/Display.js","pages/Weather.js","App.js","reportWebVitals.js","index.js"],"names":["RenderResults","props","data","name","sys","country","className","main","feels_like","size","humidity","pressure","wind","speed","Display","undefined","Index","useState","location","form","setForm","weather","setWeather","placeholder","type","onChange","event","value","target","handleChange","onClick","preventDefault","alert","url","fetch","then","response","ok","json","catch","error","console","log","WeatherApi","App","Weather","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8SAqBA,IAAMA,EAAgB,SAACC,GACnB,IAAOC,EAAQD,EAARC,KACP,OACI,gCAEkC,cAAdA,EAAKC,KACL,wCAAW,KAE3B,+BAAKD,EAAKC,KAAV,MAAmBD,EAAKE,IAAIC,WAC5B,qBAAKC,UAAU,YAAf,SACQ,+BACI,8CAAiBJ,EAAKK,KAAKC,WAA3B,QAAwC,sBAAMF,UAAU,YAAhB,SAEpCJ,EAAKK,KAAKC,WAAa,GACvB,cAAC,IAAD,CAAkBC,KAAK,OACrB,cAAC,IAAD,CAAmBA,KAAK,YAE9B,6BAAI,2CAAcP,EAAKK,KAAKG,SAAxB,KAAmC,sBAAMJ,UAAU,YAAhB,SAA4B,cAAC,IAAD,CAAYG,KAAK,cACpF,6BAAI,2CAAcP,EAAKK,KAAKI,SAAxB,IAAkC,sBAAML,UAAU,YAAhB,SAA4B,cAAC,IAAD,CAAaG,KAAK,cACpF,6BAAI,uCAAUP,EAAKU,KAAKC,MAApB,OAA8B,sBAAMP,UAAU,YAAhB,SAA4B,cAAC,IAAD,CAAcG,KAAK,uBAQ1FK,EA3Cf,SAAiBb,GACb,IAAOC,EAAQD,EAARC,KACP,OACI,qBAAKI,UAAU,iBAAf,SACI,qBAAKA,UAAU,mBAAf,SACI,qBAAKA,UAAU,kBAAf,cAEqBS,IAATb,EACA,cAAC,EAAD,CAAeA,KAAMA,IACnB,YCqDfc,EA9DD,WACV,MAAwBC,mBAAS,CAC7BC,SAAU,KADd,mBAAOC,EAAP,KAAaC,EAAb,KA2BA,EAA8BH,mBAAS,IAAvC,mBAAOI,EAAP,KAAgBC,EAAhB,KAGA,OACA,gCACI,qBAAKhB,UAAU,eAAf,SACQ,4DAEJ,sBAAKA,UAAU,eAAf,UAEA,iCACI,uBAAOiB,YAAY,WAAWjB,UAAU,cAAckB,KAAK,OAAOrB,KAAK,WAAWsB,SAAU,SAAAC,GAAK,OAnCxF,SAACA,GAClB,IAAIC,EAAQD,EAAME,OAAOD,MAE7BP,EAAQ,2BAAID,GAAL,IAAWD,SAASS,KAgCsFE,CAAaH,MAClH,uBACA,uBACA,uBAAOF,KAAK,SAASG,MAAM,SAASrB,UAAU,aAAawB,QAAS,SAAAJ,GAAK,OAjClE,SAACA,GAChBA,EAAMK,iBACa,KAAfZ,EAAKQ,OACLK,MAAO,6BAEX,IACMC,EAAG,4DAAwDd,EAAKD,SAA7D,+BADM,oCAEfgB,MAAOD,GACFE,MAAM,SAAAC,GACH,IAAKA,EAASC,GAAM,MAAMD,EAC1B,OAAOA,EAASE,UAEnBH,MAAM,SAAAjC,GAAI,OAAIoB,EAAW,CACtBpB,KAAKA,OAERqC,OAAO,SAACC,GACLC,QAAQC,IAAIF,MAiBiEG,CAAWjB,cAIvEX,IAAjBM,EAAQnB,KACJ,8BACI,cAAC,EAAD,CAASA,KAAMmB,EAAQnB,SAG9B,YC9CF0C,MANf,WACE,OACE,cAACC,EAAD,KCMWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6ec2b7d5.chunk.js","sourcesContent":["import './display.css';\r\nimport { FaTemperatureLow, FaTemperatureHigh } from \"react-icons/fa\";\r\nimport { WiHumidity, WiBarometer,WiStrongWind } from \"react-icons/wi\";\r\n\r\n\r\nfunction Display(props) {\r\n    const {data} = props;\r\n    return (\r\n        <div className=\"displayWeather\">\r\n            <div className=\"weatherContainer\">\r\n                <div className=\"location-header\">\r\n                {\r\n                            data !== undefined ?\r\n                            <RenderResults data={data}/>\r\n                             :null\r\n                        }\r\n                </div>                      \r\n                </div>\r\n        </div>\r\n    )\r\n}\r\nconst RenderResults = (props) => {\r\n    const {data} = props;\r\n    return(\r\n        <div>\r\n            {\r\n                            data.name === 'Liverpool' ?\r\n                            <h1>❤</h1>:null\r\n                        }\r\n            <h1>{data.name} - {data.sys.country}</h1>\r\n            <div className=\"data-left\">\r\n                    <li>\r\n                        <ul>Feels Like: {data.main.feels_like}°C<span className=\"desc-logo\">\r\n                        {\r\n                            data.main.feels_like < 10 ?\r\n                            <FaTemperatureLow size=\"25\"/>\r\n                            : <FaTemperatureHigh size=\"25\"/>\r\n                        }</span></ul> \r\n                        <ul><p>Humidity: {data.main.humidity}% <span className=\"desc-logo\"><WiHumidity size=\"40\"/></span></p></ul> \r\n                        <ul><p>Pressure: {data.main.pressure} <span className=\"desc-logo\"><WiBarometer size=\"40\"/></span></p></ul>\r\n                        <ul><p>Wind: {data.wind.speed}Mph <span className=\"desc-logo\"><WiStrongWind size=\"40\"/></span></p></ul>\r\n                    </li>\r\n                </div>\r\n        </div>\r\n         \r\n    )\r\n    \r\n}\r\nexport default Display\r\n","import React, { useState } from \"react\";\r\nimport './style.css'\r\nimport Display from './Display.js'\r\n\r\n\r\nconst Index = () => {\r\n    const [form, setForm] = useState({\r\n        location: \"\"\r\n    });\r\n    const handleChange = (event) => {\r\n        let value = event.target.value\r\n\r\n    setForm({...form, location:value})\r\n    }\r\n    const WeatherApi = (event) => {\r\n        event.preventDefault();\r\n        if (form.value === \"\"){\r\n            alert ('You must enter a location')\r\n        }\r\n        const apiKey = 'eb8620a27a5d9121946b8dbc2c9b504f'\r\n        const url = `https://api.openweathermap.org/data/2.5/weather?q=${form.location}&units=metric&appid=${apiKey}`\r\n        fetch (url)\r\n            .then (response =>{\r\n                if (!response.ok) { throw response }\r\n                return response.json()\r\n            })\r\n            .then (data => setWeather({\r\n                data:data\r\n            }))\r\n            .catch ((error) =>{\r\n                console.log(error);\r\n            });\r\n      }\r\n    const [weather, setWeather] = useState([\r\n        \r\n    ])\r\n    return (\r\n    <div>\r\n        <div className=\"center-title\">\r\n                <h1>Enter your nearest City.</h1>\r\n            </div>\r\n            <div className=\"search-input\">\r\n            {/* Form start */}\r\n            <form>\r\n                <input placeholder=\"Location\" className=\"locationBox\" type=\"text\" name=\"location\" onChange={event => handleChange(event)} ></input>\r\n                <br/>\r\n                <br/>\r\n                <input type=\"submit\" value=\"Submit\" className=\"getWeather\" onClick={event => WeatherApi(event)}/>\r\n            </form>\r\n\r\n            {\r\n                weather.data !== undefined ?\r\n                    <div>\r\n                        <Display data={weather.data}/>\r\n                    </div>\r\n                \r\n                :null\r\n            }\r\n            {\r\n\r\n            }\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Index;","import './App.css';\nimport Weather from './pages/Weather.js'\n\n\nfunction App() {\n  return(\n    <Weather />\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}